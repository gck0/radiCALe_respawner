#!/bin/sh

# Expects a user named radicale to exist.
# Expects config file in /etc/radicale.

# Radicale doesn't appear to play nicely with pid files on busybox
# systems, so we don't mess with them.  This also ends up requiring
# the "-n" option to be used when stopping the daemon.

DAEMON="/usr/bin/radicale"
DAEMON_ARGS="--daemon"
DAEMON_CONFIG="/etc/radicale/config"
DAEMON_LOGFILE="/var/log/radicale.log"

NAME=radicale

RADICALE_USER=radicale
RADICALE_GROUP=users
PORT=5232

# files check
if test ! -f $DAEMON_LOGFILE
then
    touch $DAEMON_LOGFILE
    chown $RADICALE_USER $DAEMON_LOGFILE
fi

if test ! -x $DAEMON
then
    echo "$DAEMON not executable"
    exit 1
fi

if test ! -f $DAEMON_CONFIG
then
    echo "No config file found at $DAEMON_CONFIG"
    exit 1
fi

# output
omsg() {
    if test $1 = 0
    then
        echo "OK."
    elif test -n "$2"
    then
        echo -e "Fail: $2"
    else
        echo "Fail."
    fi
    return $1
}


# commands
case "$1" in
  start)
    echo -n "Starting $NAME: "
    start-stop-daemon -S -q -o -c $RADICALE_USER -x $DAEMON -- $DAEMON_ARGS
        omsg $?
    ;;

  stop)
    echo -n "Stopping $NAME: "
    start-stop-daemon -K -q -o -n $NAME
    omsg $?
    ;;

  #needed when the process hangs
  kill)
    echo -n "Killing $NAME: "
    start-stop-daemon -K -s SIGKILL -q -o -n $NAME 2>/dev/null
    omsg $?
    ;;

  restart)
    ${0} stop
    ${0} start
    ;;

  force-reload)
    ${0} kill
    ${0} start
    ;;

  #reloads if hanging/freezing/crashed
  respawn)
    echo -n "Status $NAME: "
    curl -s -f -m 5 http://127.0.0.1:${PORT}
    err=$?
    if [ $err == 56 -o $err == 0 ]; then
      echo "OK($err)."
    else
      echo "Failed($err)."
      ${0} force-reload
    fi
    ;;

  *)
    echo "Usage: $0 {start|stop|kill|restart|force-reload|respawn}" >&2
    exit 1
    ;;
esac

exit 0
